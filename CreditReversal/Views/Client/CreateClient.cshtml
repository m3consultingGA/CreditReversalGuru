@model CreditReversal.Models.ClientModel

@{
    int staff = 0;
    if (Model != null)
    {
        staff = Model.AgentStaffId;
    }
    Layout = "~/Views/Shared/_secureLayoutPage.cshtml";
    string role = null;
    if (Session["UserRole"] != null)
    {
        role = Session["UserRole"].ToString();
        if (role == "admin")
        {
            ViewBag.Title = "View Client";
        }
        else
        {
            if (Request != null)
            {
                if (Request.QueryString["Mode"] == "Profile")
                {
                    ViewBag.Title = "My Profile";
                }
                else if (Request.QueryString["Mode"] == "View")
                {
                    ViewBag.Title = "View Profile";
                }
                else if (Request.QueryString["Mode"] == "Edit")
                {
                    ViewBag.Title = "Edit Client";
                }
                else
                {
                    ViewBag.Title = "Add Client";

                }
            }
            else
            {
                ViewBag.Title = "Add Client";

            }
        }


    }

}

<div class="page-header">
    <div style="padding-bottom:10px;">
        <ol class="breadcrumb pull-right">
            <li class="breadcrumb-item"><a href="@ViewBag.Dasboard"><i class="fa fa-dashboard"></i>&nbsp;Dashboard</a></li>
            @if (role != "admin")
            {
                if (Request != null)
                {
                    if (Request.QueryString["Mode"] == "Profile")
                    {
                        @*<li class="breadcrumb-item"><a href="/Client/Index"></a></li>*@
                    }
                    else if (Request.QueryString["Mode"] == "View")
                    {
                        <li class="active"><a href="/Client/Index"><i class="fa fa-user"></i>&nbsp;View Clients</a></li>

                    }
                }
            }
            else
            {

                <li class="active"><a href="/Client/Index"><i class="fa fa-user"></i>&nbsp;View Clients</a></li>
            }
            @{
                if (Request != null)
                {
                    if (Request.QueryString["Mode"] == "Edit")
                    {
                        <li class="active">Edit Client </li>
                    }
                    else if (Request.QueryString["Mode"] == "Profile")
                    {
                        <li class="active">My Profile</li>
                    }
                    else if (Request.QueryString["Mode"] == "View")
                    {
                        <li class="active">View Client</li>
                    }
                    else
                    {
                        <li class="active">Add Client </li>
                    }
                }
            }

        </ol>
    </div>
</div>
<div class="loader"> </div>
<div id="overlay"></div>
<div style="padding-top:10px">


    <div class="portlet portlet-boxed">
        <div class="portlet-header">
            @{
                if (Request != null)
                {
                    if (Request.QueryString["Mode"] == "Edit")
                    {
                        <h4 class="portlet-title">Edit Client</h4>
                    }
                    else if (Request.QueryString["Mode"] == "Profile")
                    {
                        <h4 class="portlet-title">My Profile</h4>
                    }
                    else if (Request.QueryString["Mode"] == "View")
                    {
                        <h4 class="portlet-title">View Client</h4>
                    }
                    else
                    {
                        <h4 class="portlet-title">Add Client</h4>
                    }
                }
            }


        </div> <!-- /.portlet-header -->
        <div class="portlet-body">
            <div class="row" style="padding-bottom:12px;padding-top:15px;">
                <ul class="nav nav-tabs col-md-12" id="guide-tabs">
                    <li class="active"><a data-toggle="tab" href="#home" id="navBusiness"><h6>Client Information</h6></a></li>
                    <li><a data-toggle="tab" href="#Address" id="navAddress"><h6>Identity IQ Information</h6></a></li>

                </ul>

                <form method="post" id="clientform" action="/Client/CreateClient" enctype="multipart/form-data">
                    <div class="tab-content">
                        <div id="home" class="tab-pane fade in active">
                            <div class="col-md-12">
                                <input type="hidden" name="Mode" id="hdnMode" value="@Request.QueryString["Mode"]" />
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>First Name <span style="color:red">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control" name="FirstName" maxlength="50" id="txtFirstName" value="@Model.FirstName" onchange="RemoveValidation(this);" required>
                                                    <div class="text-danger" id="Msg_txtFirstName">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Last Name <span style="color:red">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control" name="LastName" maxlength="50" id="txtLastName" onchange="RemoveValidation(this);" value="@Model.LastName" required>
                                                    <div class="text-danger" id="Msg_txtLastName">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Middle Name</label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control" maxlength="50" name="MiddleName" id="txtMiddleName" value="@Model.MiddleName">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Date Of Birth<span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control datepicker" name="DOB" id="txtDOB" onchange="RemoveValidation(this);" autocomplete="off" value="@Model.DOB" required>
                                                    <div class="text-danger" id="Msg_txtDOB">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Address Information -->
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Address 1<span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control" name="Address1" id="Address1" onchange="RemoveValidation(this);" value="@Model.Address1" required>
                                                    <div class="text-danger" id="Msg_Address1">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Address 2</label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control" name="Address2" id="Address2" value="@Model.Address2">
                                                    <div class="text-danger" id="Msg_Address2">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>City<span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control" name="City" id="City" onchange="RemoveValidation(this);" value="@Model.City" required>
                                                    <div class="text-danger" id="Msg_City">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>State<span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="text" class="form-control" name="State" id="State" onchange="RemoveValidation(this);" value="@Model.State" required>
                                                    <div class="text-danger" id="Msg_State">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>ZipCode<span class="text-danger">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control" name="ZipCode" id="ZipCode" onchange="RemoveValidation(this);" value="@Model.ZipCode" required>
                                                        <span class="input-group-btn" id="Mpopover">
                                                            <a class="btn btn-default" data-toggle="popover" title="Enter Zipcode" data-content="Must be at least 5 characters long, Format should be 00000."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                        </span>
                                                    </div>
                                                    <div class="text-danger" id="Msg_ZipCode">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Email Id <span style="color:red">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input type="email" class="form-control" name="txtTempEmail" id="txtTempEmail" style="display:none">


                                                    @if (string.IsNullOrEmpty(Model.CurrentEmail))
                                                    {<div class="input-group">
                                                            <input type="email" class="form-control" name="CurrentEmail" id="txtCurrentEmail" onchange="RemoveValidation(this),checkemail();" value="@Model.CurrentEmail" required>
                                                            <span class="input-group-btn" id="Mpopover">
                                                                <a class="btn btn-default" data-toggle="popover" title="Enter Email" data-content="Format should be 'john@company.com'."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                            </span>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div >
                                                            <input type="email" class="form-control" name="CurrentEmail" id="txtCurrentEmail" value="@Model.CurrentEmail" readonly>
                                                        </div>
                                                    }
                                                    <div class="text-danger" id="Msg_txtCurrentEmail">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">

                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Phone</label>
                                                </div>
                                                <div class="col-md-4">

                                                    <input type="text" class="form-control" maxlength="20" name="CurrentPhone" id="txtPhone" value="@Model.CurrentPhone">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-2">
                                                    <label>Social Security Number <span style="color:red">*</span></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="input-group">
                                                        <input type="number" class="form-control" maxlength="9" name="SSN" placeholder="Social Security Number"
                                                               id="txtSSN" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"
                                                               onchange="RemoveValidation(this),checkssn();" value="@Model.SSN" required />
                                                        <span class="input-group-btn" id="Mpopover">
                                                            <a class="btn btn-default" data-toggle="popover" title="Social Security Number" data-content="Must be at least 9 characters long, Format should be 000-00-0000."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                        </span>
                                                    </div>
                                                    @*data-placement="right" data-trigger="popover"*@
                                                    <div class="text-danger" id="Msg_txtSSN">
                                                    </div>

                                                </div>

                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                @if (Model.sSocialSecCard == null)
                                                {
                                                    <div class="col-md-2">
                                                        <label>Social Security Card <span style="color:red">*</span></label>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="input-group">
                                                            <input type="file" class="form-control" name="FSocialSecCard" id="FileSocialSecCard" onchange="RemoveValidation(this);" accept=".pdf,.jpeg,.png,.jpg" required />
                                                            <span class="input-group-btn" id="Mpopover">
                                                                <a class="btn btn-default" data-toggle="popover" title="Social Security Number" data-content="Usually this is the articles of Social Security Card filed. PDF/JPG/PNG only."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                            </span>
                                                        </div>
                                                        <div class="text-danger" id="Msg_FileSocialSecCard">
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-md-2">
                                                        <label>Social Security Card <span style="color:red"></span></label>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="input-group">
                                                            <input type="file" class="form-control" name="FSocialSecCard" id="FileSocialSecCard" accept=".pdf,.jpeg,.png,.jpg" />
                                                            <span class="input-group-btn" id="Mpopover">
                                                                <a class="btn btn-default" data-toggle="popover" title="Social Security Number" data-content="Usually this is the articles of Social Security Card filed. PDF/JPG/PNG only."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                            </span>
                                                        </div>
                                                        <input type="text" name="sSocialSecCard" value="@Model.sSocialSecCard" hidden />

                                                        <span><label>@Model.sSocialSecCard</label></span>


                                                    </div>
                                                }
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                @if (Model.sDrivingLicense == null)
                                                {
                                                    <div class="col-md-2">
                                                        <label>Drivers License <span style="color:red">*</span></label>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="input-group">
                                                            <input type="file" class="form-control" name="FDrivingLicense" id="FileDrivingLicense" onchange="RemoveValidation(this);" accept=".pdf,.jpeg,.png,.jpg" required />

                                                            <span class="input-group-btn" id="Mpopover">
                                                                <a class="btn btn-default" data-toggle="popover" title="Social Security Number" data-content="Usually this is the articles of Drivers License filed. PDF/JPG/PNG only."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                            </span>
                                                        </div>
                                                        <div class="text-danger" id="Msg_FileDrivingLicense">
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-md-2">
                                                        <label>Drivers License <span style="color:red"></span></label>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="input-group">
                                                            <input type="file" class="form-control" name="FDrivingLicense" id="FileDrivingLicense" accept=".pdf,.jpeg,.png,.jpg" />

                                                            <span class="input-group-btn" id="Mpopover">
                                                                <a class="btn btn-default" data-toggle="popover" title="Social Security Number" data-content="Usually this is the articles of Drivers License filed. PDF/JPG/PNG only."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                            </span>
                                                        </div>
                                                        <input type="text" name="sDrivingLicense" value="@Model.sDrivingLicense" hidden />
                                                        <span><label>@Model.sDrivingLicense</label></span>
                                                    </div>

                                                }
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                @if (Model.sProofOfCard == null)
                                                {
                                                    <div class="col-md-2">
                                                        <label>Proof Of Address <span style="color:red">*</span></label>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="input-group">
                                                            <input type="file" class="form-control" name="FProofOfCard" id="FileProofOfCard" onchange="RemoveValidation(this)" accept=".pdf,.jpeg,.png,.jpg" required />

                                                            <span class="input-group-btn" id="Mpopover">
                                                                <a class="btn btn-default" data-toggle="popover" title="Social Security Number" data-content="Usually this is the articles of Proof of Address filed. PDF/JPG/PNG only."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                            </span>
                                                        </div>
                                                        <div class="text-danger" id="Msg_FileProofOfCard">
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-md-2">
                                                        <label>Proof Of Address <span style="color:red"></span></label>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="input-group">
                                                            <input type="file" class="form-control" name="FProofOfCard" id="FileProofOfCard" accept=".pdf,.jpeg,.png,.jpg" />
                                                            <span class="input-group-btn" id="Mpopover">
                                                                <a class="btn btn-default" data-toggle="popover" title="Social Security Number" data-content="Usually this is the articles of Proof of Address filed. PDF/JPG/PNG only."><i class="glyphicon glyphicon-question-sign"></i></a>
                                                            </span>
                                                        </div>
                                                        <input type="text" name="sProofOfCard" value="@Model.sProofOfCard" hidden />
                                                        <span><label>@Model.sProofOfCard</label></span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                        <input type="text" name="ClientId" value="@Model.ClientId" hidden />
                                        <div class="col-md-6">
                                            <div class="row">
                                                <div class="col-md-2 pull-right">
                                                    <input type="button" id="bnt_next" class="btn btn-secondary" value="Next" />
                                                </div>
                                            </div>
                                        </div>

                                        @*<div class="row">
                                                    <div class="col-md-2 pull-right">
                                                        <input type="button" id="bnt_next" class="btn btn-secondary" value="Next" />
                                                    </div>
                                            </div>*@

                                    </div>
                                </div>

                            </div>
                        </div>
                        <div id="Address" class="tab-pane fade" style="padding-left:15px;">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-2">
                                                <label>Question <span style="color:red"></span></label>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="text" class="form-control" name="IdQuestion" maxlength="150" id="IdQuestion" value="@Model.IdQuestion">
                                            </div>

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-2">
                                                <label>Answer <span style="color:red"></span></label>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="text" class="form-control" name="IdAnswer" maxlength="150" id="IdAnswer" value="@Model.IdAnswer">
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-2">
                                                <label>
                                                    UserName
                                                    <span style="color:red"></span>
                                                </label>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="text" class="form-control" maxlength="50" name="IdUserName" id="IdUserName" value="@Model.IdUserName">
                                            </div>

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-2">
                                                <label>Password</label><span style="color:red"></span>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="password" class="form-control" maxlength="10" name="tempPassword" id="tempPassword" style="display:none">
                                                <input type="password" class="form-control" maxlength="10" name="IdPassword" id="IdPassword" value="@Model.IdPassword">
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-2">
                                                <label>Confirm Password</label><span style="color:red"></span>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="password" class="form-control" maxlength="10" name="CfmPassword" id="CfmPassword" value="@Model.IdPassword">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="row">
                                            <div class="col-md-2 pull-right">
                                                @if (role != "admin" && role != "client")
                                                {
                                                    string from = Request["from"] != null ? Request["from"].ToString() : string.Empty;
                                                    if (from == "db")
                                                    {
                                                        <a href="/dashboard/agent" class="btn btn-danger pull-right"> Cancel</a>
                                                    }
                                                    else if (from == "sdb")
                                                    {
                                                        <a href="/dashboard/staff" class="btn btn-danger pull-right"> Cancel</a>
                                                    }
                                                    else
                                                    {
                                                        <a href="/Client/Index" class="btn btn-danger pull-right"> Cancel</a>
                                                    }
                                                }
                                                else if (role == "client")
                                                {
                                                    <a href="/Dashboard/Client" class="btn btn-danger pull-right"> Cancel</a>
                                                }
                                            </div>
                                            <div class="col-md-2 pull-right">

                                                <input type="submit" id="btnsub" class="btn btn-secondary pull-right" value="Submit" />

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">

    $('#clientform').on('keyup keypress', function (e) {
        var keyCode = e.keyCode || e.which;
        if (keyCode === 13) {
            e.preventDefault();
            return false;
        }
    });
    $(document).ready(function () {

        $('[data-toggle="popover"]').popover();

 var from = getUrlParameter('from');
        var staffid = @Html.Raw(Json.Encode(staff));
        //var sessionstaff = Html.Raw(Json.Encode(sessionstaffId));

        var sessionId = '@Session["StaffId"]';

        if (from == "sdb") {
            if (staffid != sessionId) {
                $("#btnsub").hide();
            }

        }
        var IQ = getUrlParameter('IQ');
        if (IQ == "true") {
            $('#guide-tabs li:eq(1) a').tab('show');
        }
        $(".loader").hide();
        $("#overlay").hide();

        var currentDate = new Date();
        var day = currentDate.getDate();
        var month = currentDate.getMonth() + 1;
        if (parseInt(month) < 10) {
            month = "0" + month;
        }

        var year = currentDate.getFullYear() - 18;

        var date = month + "/" + day + "/" + year;
        if ($("#txtDOB").val() == "") {
            $('#txtDOB').datepicker({
                format: 'mm/dd/yyyy',
                autoclose: true
            }).datepicker("setDate", date);
        }
        else {
            $('#txtDOB').datepicker({
                format: 'mm/dd/yyyy',
                autoclose: true
            }).datepicker();
        }


        $("#btnUpdate").hide();
        var ClientId = getUrlParameter('ClientId');
        if (ClientId != undefined) {
            $("#btnUpdate").show();
            $("#btnAddClient").hide();
        }
    });

    $("#bnt_next,#navAddress").click(function () {
        var firstname = document.getElementById("txtFirstName");
        var lastname = document.getElementById("txtLastName");
        var dob = document.getElementById("txtDOB");

        var address1 = document.getElementById("Address1");
        var address2 = document.getElementById("Address2");
        var city = document.getElementById("City");
        var state = document.getElementById("State");
        var zipcode = document.getElementById("ZipCode");

        var email = document.getElementById("txtCurrentEmail");
        var phone = document.getElementById("txtPhone");
        var ssn = document.getElementById("txtSSN");
        var socialcard = document.getElementById("FileSocialSecCard");
        var license = document.getElementById("FileDrivingLicense");
        var proofcard = document.getElementById("FileProofOfCard");

        if (!firstname.checkValidity()) {
            $("#txtFirstName").focus();
            document.getElementById("Msg_txtFirstName").innerHTML = firstname.validationMessage;
            return false;
        } else if (!lastname.checkValidity()) {
            $("#txtLastName").focus();
            document.getElementById("Msg_txtLastName").innerHTML = lastname.validationMessage;
            return false;
        } else if (!dob.checkValidity()) {
            $("#txtDOB").focus();
            document.getElementById("Msg_txtDOB").innerHTML = dob.validationMessage;
            return false;
        } else if (!address1.checkValidity()) {
            $("#Address1").focus();
            document.getElementById("Msg_Address1").innerHTML = address1.validationMessage;
            return false;
        } else if (!city.checkValidity()) {
            $("#City").focus();
            document.getElementById("Msg_City").innerHTML = city.validationMessage;
            return false;
        } else if (!state.checkValidity()) {
            $("#State").focus();
            document.getElementById("Msg_State").innerHTML = state.validationMessage;
            return false;
        } else if (!zipcode.checkValidity()) {
            $("#ZipCode").focus();
            document.getElementById("Msg_ZipCode").innerHTML = zipcode.validationMessage;
            return false;
        } else if (!email.checkValidity()) {
            $("#txtCurrentEmail").focus();
            document.getElementById("Msg_txtCurrentEmail").innerHTML = email.validationMessage;
            return false;
        } else if (!ssn.checkValidity()) {
            $("#txtSSN").focus();
            document.getElementById("Msg_txtSSN").innerHTML = ssn.validationMessage;
            return false;
        } else if (!socialcard.checkValidity()) {
            $("#FileSocialSecCard").focus();
            document.getElementById("Msg_FileSocialSecCard").innerHTML = "Please select file.";
            return false;
        } else if (!license.checkValidity()) {
            $("#FileDrivingLicense").focus();
            document.getElementById("Msg_FileDrivingLicense").innerHTML = "Please select file.";
            return false;
        } else if (!proofcard.checkValidity()) {
            $("#FileProofOfCard").focus();
            document.getElementById("Msg_FileProofOfCard").innerHTML = "Please select file.";
            return false;
        }
        else {
            $('#guide-tabs li:eq(1) a').tab('show');
        }


    });

    function RemoveValidation(inputid) {
        var input = inputid.id;
        var ID = document.getElementById(inputid.id);
        var msgID = "Msg_" + input;
        if (!ID.checkValidity()) {

        } else {
            debugger
            $("#" + msgID).html("");

        }
    }

    $("#btnsub").click(function () {

        var question = document.getElementById("IdQuestion").value;
        var answer = document.getElementById("IdAnswer").value;
        var username = document.getElementById("IdUserName").value;
        var password = document.getElementById("IdPassword").value;
        var cfmpassword = document.getElementById("CfmPassword").value;


        if (question != "" || answer != "" || username != "" || password != "" || cfmpassword != "") {
            document.getElementById("IdQuestion").required = "required";
            document.getElementById("IdAnswer").required = "required";
            document.getElementById("IdUserName").required = "required";
            document.getElementById("IdPassword").required = "required";
            document.getElementById("CfmPassword").required = "required";
            //Identity IQ information validation
            if (!document.getElementById("IdQuestion").checkValidity()) {
                $("#IdQuestion").focus();
                document.getElementById("Msg_IdQuestion").innerHTML = "Please fill out this field.";
                return false;
            } else if (!document.getElementById("IdAnswer").checkValidity()) {
                $("#IdAnswer").focus();
                document.getElementById("Msg_IdAnswer").innerHTML = "Please fill out this field.";
                return false;
            } else if (!document.getElementById("IdUserName").checkValidity()) {
                $("#IdUserName").focus();
                document.getElementById("Msg_IdUserName").innerHTML = "Please fill out this field.";
                return false;
            } else if (!document.getElementById("IdPassword").checkValidity()) {
                $("#IdPassword").focus();
                document.getElementById("Msg_IdPassword").innerHTML = "Please fill out this field.";
                return false;
            } else if (!document.getElementById("CfmPassword").checkValidity()) {
                $("#CfmPassword").focus();
                document.getElementById("Msg_CfmPassword").innerHTML = "Please fill out this field.";
                return false;
            }
        }

        var password = document.getElementById("IdPassword").value;
        var re_password = document.getElementById("CfmPassword").value;

        if (password != "" && re_password != "") {
            if (password != re_password) {
                $("#IdPassword").val("");
                $("#CfmPassword").val("");
                Swal.fire("!Warning", "password not matched", "warning");
                return false;
            }
        }
        $(".loader").show();
        $("#overlay").show();
    });

    //$(".AddClient").click(function (e) {

    //	var ClientId = getUrlParameter('ClientId');
    //	var txtFirstName = $("#txtFirstName").val();
    //	var txtLastName = $("#txtLastName").val();
    //	var txtCurrentEmail = $("#txtCurrentEmail").val();
    //	var txtSSN = $("#txtSSN").val();
    //	var SocialSecCard = document.getElementById("FileSocialSecCard").files[0];
    //	var DrivingLicense = document.getElementById("FileDrivingLicense").files[0];
    //	var ProofOfCard = document.getElementById("FileProofOfCard").files[0];
    //	var lblSocialSecCard = $("#lblSocialSecCard").text();
    //	var lblProofOfCard = $("#lblProofOfCard").text();
    //	var lblDrivingLicense = $("#lblDrivingLicense").text();


    //	var FileSocialSecCard = $('#FileSocialSecCard').val().split('.').pop().toLowerCase();
    //	if (FileSocialSecCard != "") {
    //		if ($.inArray(FileSocialSecCard, ['png', 'jpg', 'jpeg', 'pdf']) == -1) {
    //			Swal.fire("Warning", "Select valid file (jpeg, jpg, png, pdf)", "warning");
    //			return false
    //		}
    //	}
    //	var FileDrivingLicense = $('#FileDrivingLicense').val().split('.').pop().toLowerCase();
    //	if (FileDrivingLicense != "") {
    //		if ($.inArray(FileDrivingLicense, ['png', 'jpg', 'jpeg', 'pdf']) == -1) {
    //			Swal.fire("Warning", "Select valid file (jpeg, jpg, png, pdf).", "warning");
    //			return false
    //		}
    //	}
    //	var FileProofOfCard = $('#FileProofOfCard').val().split('.').pop().toLowerCase();
    //	if (FileProofOfCard != "") {
    //		if ($.inArray(FileProofOfCard, ['png', 'jpg', 'jpeg', 'pdf']) == -1) {
    //			Swal.fire("Warning", "Select valid file (jpeg, jpg, png, pdf).", "warning");
    //			return false;
    //		}
    //	}

    //	var email = $("#txtCurrentEmail").val();
    //	if (email !== "") {
    //		var reg = /^([A-Za-z0-9_\-\.])+\@@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
    //		if (reg.test(email) === false) {
    //			Swal.fire("Warning!", "Invalid Email Address", "warning");
    //			$("#txtCurrentEmail").val('');
    //			return false;
    //		}
    //	}



    //	var clientModel = {
    //		ClientId: ClientId,
    //		FirstName: txtFirstName,
    //		MiddleName: $("#txtMiddleName").val(),
    //		LastName: txtLastName,
    //		DOB: $("#txtDOB").val(),
    //		SSN: txtSSN,
    //		CurrentEmail: txtCurrentEmail,
    //		CurrentPhone: $("#txtPhone").val(),
    //		SocialSecCard: SocialSecCard,
    //		DrivingLicense: DrivingLicense,
    //		ProofOfCard: ProofOfCard
    //	};



    //	if (clientModel.FirstName != "" && clientModel.LastName != "" && clientModel.SSN != "" && clientModel.CurrentEmail != "") {
    //		if ((SocialSecCard != undefined || lblSocialSecCard != "") && (ProofOfCard != undefined || lblProofOfCard != "") && (DrivingLicense != undefined || lblDrivingLicense != "")) {
    //			e.preventDefault();
    //			AddClient(clientModel);
    //		}
    //	}

    //});


    function checkssn() {
        var SSN = $("#txtSSN").val();

        $.ajax({
            url: '/Client/CheckSSNExistorNot',
            type: 'POST',
            data: { SSN: SSN },
            cache: false,
            dataType: "json",
            success: function (res) {
                if (res == true) {
                    Swal.fire("Warning", "Social Security Number already exists.", "warning");
                    $("#txtSSN").val('');
                    return false;
                }

            }
        });
    }


    function checkemail() {
        //var email = $("#txtCurrentEmail").val();
        //if (email !== "") {
        //    var reg = /^([A-Za-z0-9_\-\.])+\@@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
        //    if (reg.test(email) === false) {
        //        Swal.fire("Warning!", "Invalid Email Address", "warning");
        //        $("#txtCurrentEmail").val('');
        //        return false;
        //    }
        //}

        var txtCurrentEmail = $("#txtCurrentEmail").val();


        var ClientId = getUrlParameter("ClientId");

        $.ajax({
            url: '/Client/CheckUsernameexistorNot',
            type: 'POST',
            data: { CurrentEmail: txtCurrentEmail, ClientId: ClientId },
            cache: false,
            dataType: "json",
            success: function (res) {
                if (res == true) {

                    Swal.fire("Warning", "Email Address already exists", "warning");
                    $("#txtCurrentEmail").val('');
                }
            }
        });
    }

    var getUrlParameter = function getUrlParameter(sParam) {
        var sPageURL = window.location.search.substring(1),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
            }
        }
    }

                //function AddClient(clientModel) {

                //	var formData = new FormData();
                //	formData.append('ClientId', clientModel.ClientId);
                //	formData.append('FirstName', clientModel.FirstName);
                //	formData.append('LastName', clientModel.LastName);
                //	formData.append('MiddleName', clientModel.MiddleName);
                //	formData.append('CurrentEmail', clientModel.CurrentEmail);
                //	formData.append('CurrentPhone', clientModel.CurrentPhone);
                //	formData.append('DOB', clientModel.DOB);
                //	formData.append('SSN', clientModel.SSN);
                //	formData.append("SocialSecCard", clientModel.SocialSecCard);
                //	formData.append("DrivingLicense", clientModel.DrivingLicense);
                //	formData.append('ProofOfCard', clientModel.ProofOfCard);

                //	if (clientModel.SocialSecCard != null) {
                //		formData.append("isSocialSecCard", 1);
                //	}
                //	else {
                //		formData.append("isSocialSecCard", 0);
                //	}

                //	if (clientModel.DrivingLicense != null) {
                //		formData.append("isDrivingLicense", 1);
                //	}
                //	else {
                //		formData.append("isDrivingLicense", 0);
                //	}

                //	if (clientModel.ProofOfCard != null) {
                //		formData.append("isProofOfCard", 1);
                //	}
                //	else {
                //		formData.append("isProofOfCard", 0);
                //	}

                //	$(".loader").show();
                //	$("#overlay").show();
                //	var Mode = getUrlParameter('Mode');


                //	$.ajax({
                //		url: '/Client/CreateNewClient',
                //		type: "POST",
                //		enctype: 'multipart/form-data',
                //		contentType: false, // Not to set any content header
                //		processData: false, // Not to process data
                //		data: formData,
                //		success: function (res) {
                //			debugger;
                //			if (res > 0) {
                //				$(".loader").hide();
                //				$("#overlay").hide();
                //				if (clientModel.ClientId != undefined && Mode == 'Edit') {
                //					Swal.fire({
                //						title: "Success!",
                //						text: "Client updated successfully!",
                //						type: 'success',

                //					}).then(function () {
                //						window.location.href = "/Client/Index";
                //					})
                //				}
                //				if (clientModel.ClientId != undefined && Mode == 'Profile') {
                //					Swal.fire({
                //						title: "Success!",
                //						text: "Client updated successfully!",
                //						type: 'success',

                //					}).then(function () {
                //						window.location.href = "/Dashboard/Client";
                //					})
                //				}
                //				if (clientModel.ClientId == undefined) {
                //					Swal.fire({
                //						title: "Success!",
                //						text: "Client added successfully!",
                //						type: 'success',

                //					}).then(function () {
                //						window.location.href = "/Client/Index";
                //					})

                //				}
                //			}
                //		},
                //		error: function (err) {

                //		}
                //	});

                //}



</script>
